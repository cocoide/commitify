// Code generated by MockGen. DO NOT EDIT.
// Source: openai.go

// Package mock_gateway is a generated GoMock package.
package mock_gateway

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockOpenAIGateway is a mock of OpenAIGateway interface.
type MockOpenAIGateway struct {
	ctrl     *gomock.Controller
	recorder *MockOpenAIGatewayMockRecorder
}

// MockOpenAIGatewayMockRecorder is the mock recorder for MockOpenAIGateway.
type MockOpenAIGatewayMockRecorder struct {
	mock *MockOpenAIGateway
}

// NewMockOpenAIGateway creates a new mock instance.
func NewMockOpenAIGateway(ctrl *gomock.Controller) *MockOpenAIGateway {
	mock := &MockOpenAIGateway{ctrl: ctrl}
	mock.recorder = &MockOpenAIGatewayMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockOpenAIGateway) EXPECT() *MockOpenAIGatewayMockRecorder {
	return m.recorder
}

// AsyncGetAnswerFromPrompt mocks base method.
func (m *MockOpenAIGateway) AsyncGetAnswerFromPrompt(prompt string, variability float32) <-chan string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AsyncGetAnswerFromPrompt", prompt, variability)
	ret0, _ := ret[0].(<-chan string)
	return ret0
}

// AsyncGetAnswerFromPrompt indicates an expected call of AsyncGetAnswerFromPrompt.
func (mr *MockOpenAIGatewayMockRecorder) AsyncGetAnswerFromPrompt(prompt, variability interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AsyncGetAnswerFromPrompt", reflect.TypeOf((*MockOpenAIGateway)(nil).AsyncGetAnswerFromPrompt), prompt, variability)
}

// GetAnswerFromPrompt mocks base method.
func (m *MockOpenAIGateway) GetAnswerFromPrompt(prompt string, variability float32) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAnswerFromPrompt", prompt, variability)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAnswerFromPrompt indicates an expected call of GetAnswerFromPrompt.
func (mr *MockOpenAIGatewayMockRecorder) GetAnswerFromPrompt(prompt, variability interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAnswerFromPrompt", reflect.TypeOf((*MockOpenAIGateway)(nil).GetAnswerFromPrompt), prompt, variability)
}
